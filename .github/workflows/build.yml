name: build

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - id: install-secret-key
        name: Install gpg secret key
        run: |
          cat <(echo -e "${{ secrets.OSSRH_GPG_SECRET_KEY }}") | gpg --batch --import
          gpg --list-secret-keys

      - name: Publish to the Maven Central Repository
        run: mvn -Dgpg.passphrase=${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }} --batch-mode deploy
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}

      #      - name: Set up Java for publishing to GitHub Packages
      #        uses: actions/setup-java@v4
      #        with:
      #          distribution: 'temurin'
      #          java-version: '21'
      #          server-id: github

      #      - name: Publish to GitHub Packages
      #        run: mvn --batch-mode deploy
      #        env:
      #          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#      - name: Build with Maven
#        run: mvn -B package --file pom.xml

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Read version file
        run: |
          VERSION=$(sed -n 's/.*<version>\(.*\)<\/version>.*/\1/p' pom.xml | head -n 1)
          echo "Project version: $VERSION"
          echo "PROJECT_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/gua64-${{ env.PROJECT_VERSION }}.jar
          asset_name: gua64-${{ env.PROJECT_VERSION }}.jar
          asset_content_type: application/java-archive